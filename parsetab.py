
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEleftOPENCLOSECLOSE COS DIVIDE EQUALS EULER EXP FACTORIAL FLOAT INT LOG MINUS MULTIPLY NAME NATURAL OPEN PI PLUS SIN SQUARE TAN UP\n    calc : expression\n         | empty\n    \n    expression : expression EXP PLUS expression\n               | expression EXP MINUS expression\n    \n    expression : expression MULTIPLY expression\n               | expression DIVIDE expression \n               | expression PLUS expression\n               | expression MINUS expression \n               | expression EXP expression\n               | expression UP expression\n    \n    expression : OPEN expression CLOSE \n    \n    expression : expression FACTORIAL\n               \n    \n    expression : SIN OPEN expression CLOSE\n               | COS OPEN expression CLOSE\n               | TAN OPEN expression CLOSE\n               | NATURAL OPEN expression CLOSE\n               | SQUARE OPEN expression CLOSE\n               \n               \n    \n    expression : LOG expression OPEN expression CLOSE\n    \n     expression : INT\n                | FLOAT\n     \n    empty : \n    '
    
_lr_action_items = {'COS':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'SQUARE':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NATURAL':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'LOG':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'INT':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'UP':([5,7,10,16,20,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,21,21,-12,21,21,21,21,-11,21,21,-6,21,-7,21,-5,-8,-14,-17,-16,-13,-15,-3,-4,21,-18,]),'DIVIDE':([5,7,10,16,20,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,19,19,-12,19,19,19,19,-11,19,19,-6,19,19,19,-5,19,-14,-17,-16,-13,-15,19,19,19,-18,]),'MINUS':([5,7,10,16,20,23,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,25,25,-12,38,25,25,25,25,-11,25,25,-6,25,-7,25,-5,-8,-14,-17,-16,-13,-15,-3,-4,25,-18,]),'FACTORIAL':([5,7,10,16,20,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,20,20,-12,20,20,20,20,-11,20,20,-6,20,-7,20,-5,-8,-14,-17,-16,-13,-15,-3,-4,20,-18,]),'PLUS':([5,7,10,16,20,23,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,22,22,-12,36,22,22,22,22,-11,22,22,-6,22,-7,22,-5,-8,-14,-17,-16,-13,-15,-3,-4,22,-18,]),'EXP':([5,7,10,16,20,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,23,23,-12,23,23,23,23,-11,23,23,-6,23,-7,23,-5,-8,-14,-17,-16,-13,-15,-3,-4,23,-18,]),'MULTIPLY':([5,7,10,16,20,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,24,24,-12,24,24,24,24,-11,24,24,-6,24,24,24,-5,24,-14,-17,-16,-13,-15,24,24,24,-18,]),'CLOSE':([5,7,16,20,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,47,48,49,50,],[-20,-19,30,-12,42,43,44,-11,45,46,-6,-10,-7,-9,-5,-8,-14,-17,-16,-13,-15,-3,-4,50,-18,]),'TAN':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'OPEN':([0,1,2,3,4,5,6,7,8,12,13,14,15,17,18,19,20,21,22,23,24,25,26,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[4,13,14,15,4,-20,17,-19,18,4,4,4,4,4,4,4,-12,4,4,4,4,4,41,-11,-6,-10,-7,4,-9,4,-5,-8,4,-14,-17,-16,-13,-15,-3,-4,-18,]),'SIN':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'$end':([0,5,7,9,10,11,20,30,33,34,35,37,39,40,42,43,44,45,46,47,48,50,],[-21,-20,-19,0,-1,-2,-12,-11,-6,-10,-7,-9,-5,-8,-14,-17,-16,-13,-15,-3,-4,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[9,]),'expression':([0,4,12,13,14,15,17,18,19,21,22,23,24,25,36,38,41,],[10,16,26,27,28,29,31,32,33,34,35,37,39,40,47,48,49,]),'empty':([0,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','Calculadora2.py',135),
  ('calc -> empty','calc',1,'p_calc','Calculadora2.py',136),
  ('expression -> expression EXP PLUS expression','expression',4,'p_expression_exp','Calculadora2.py',144),
  ('expression -> expression EXP MINUS expression','expression',4,'p_expression_exp','Calculadora2.py',145),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',151),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',152),
  ('expression -> expression PLUS expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',153),
  ('expression -> expression MINUS expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',154),
  ('expression -> expression EXP expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',155),
  ('expression -> expression UP expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',156),
  ('expression -> OPEN expression CLOSE','expression',3,'p_expression_parentesis','Calculadora2.py',165),
  ('expression -> expression FACTORIAL','expression',2,'p_expression_fact_pi','Calculadora2.py',172),
  ('expression -> SIN OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',180),
  ('expression -> COS OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',181),
  ('expression -> TAN OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',182),
  ('expression -> NATURAL OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',183),
  ('expression -> SQUARE OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',184),
  ('expression -> LOG expression OPEN expression CLOSE','expression',5,'p_expression_logarith','Calculadora2.py',192),
  ('expression -> INT','expression',1,'p_expression_int_float','Calculadora2.py',200),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','Calculadora2.py',201),
  ('empty -> <empty>','empty',0,'p_empty','Calculadora2.py',207),
]
