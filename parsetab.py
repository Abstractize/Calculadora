
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLOSE COS DIVIDE EQUALS EULER EXP FACTORIAL FLOAT INT LOG MINUS MULTIPLY NAME NATURAL OPEN PI PLUS SIN SQUARE TAN UP\n    calc : expression\n         | empty\n    \n    expression : expression MULTIPLY expression\n               | expression DIVIDE expression \n               | expression PLUS expression\n               | expression MINUS expression \n               | expression EXP expression\n    \n    expression : expression FACTORIAL\n               | expression PI\n    \n    expression : SIN OPEN expression CLOSE\n               | COS OPEN expression CLOSE\n               | TAN OPEN expression CLOSE\n               | LOG OPEN expression CLOSE\n               | SQUARE OPEN expression CLOSE\n               | EULER OPEN expression CLOSE\n               \n    \n    expression : LOG NATURAL OPEN expression CLOSE\n    \n     expression : INT\n                | FLOAT\n     \n    empty : \n    '
    
_lr_action_items = {'SIN':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'COS':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'TAN':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LOG':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'SQUARE':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'EULER':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INT':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FLOAT':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'$end':([0,1,2,3,10,11,17,18,26,27,28,29,30,38,39,40,41,43,44,45,],[-19,0,-1,-2,-17,-18,-8,-9,-3,-4,-5,-6,-7,-10,-11,-12,-13,-14,-15,-16,]),'MULTIPLY':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[12,-17,-18,-8,-9,12,12,12,12,12,12,12,12,12,12,12,-10,-11,-12,-13,12,-14,-15,-16,]),'DIVIDE':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[13,-17,-18,-8,-9,13,13,13,13,13,13,13,13,13,13,13,-10,-11,-12,-13,13,-14,-15,-16,]),'PLUS':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[14,-17,-18,-8,-9,14,14,14,14,14,14,14,14,14,14,14,-10,-11,-12,-13,14,-14,-15,-16,]),'MINUS':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[15,-17,-18,-8,-9,15,15,15,15,15,15,15,15,15,15,15,-10,-11,-12,-13,15,-14,-15,-16,]),'EXP':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[16,-17,-18,-8,-9,16,16,16,16,16,16,16,16,16,16,16,-10,-11,-12,-13,16,-14,-15,-16,]),'FACTORIAL':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[17,-17,-18,-8,-9,17,17,17,17,17,17,17,17,17,17,17,-10,-11,-12,-13,17,-14,-15,-16,]),'PI':([2,10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[18,-17,-18,-8,-9,18,18,18,18,18,18,18,18,18,18,18,-10,-11,-12,-13,18,-14,-15,-16,]),'OPEN':([4,5,6,7,8,9,23,],[19,20,21,22,24,25,35,]),'NATURAL':([7,],[23,]),'CLOSE':([10,11,17,18,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,],[-17,-18,-8,-9,-3,-4,-5,-6,-7,38,39,40,41,43,44,-10,-11,-12,-13,45,-14,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,12,13,14,15,16,19,20,21,22,24,25,35,],[2,26,27,28,29,30,31,32,33,34,36,37,42,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','Calculadora.py',119),
  ('calc -> empty','calc',1,'p_calc','Calculadora.py',120),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_s_r_m_d','Calculadora.py',126),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_s_r_m_d','Calculadora.py',127),
  ('expression -> expression PLUS expression','expression',3,'p_expression_s_r_m_d','Calculadora.py',128),
  ('expression -> expression MINUS expression','expression',3,'p_expression_s_r_m_d','Calculadora.py',129),
  ('expression -> expression EXP expression','expression',3,'p_expression_s_r_m_d','Calculadora.py',130),
  ('expression -> expression FACTORIAL','expression',2,'p_expression_fact_pi','Calculadora.py',136),
  ('expression -> expression PI','expression',2,'p_expression_fact_pi','Calculadora.py',137),
  ('expression -> SIN OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora.py',144),
  ('expression -> COS OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora.py',145),
  ('expression -> TAN OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora.py',146),
  ('expression -> LOG OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora.py',147),
  ('expression -> SQUARE OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora.py',148),
  ('expression -> EULER OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora.py',149),
  ('expression -> LOG NATURAL OPEN expression CLOSE','expression',5,'p_expression_log_natural','Calculadora.py',156),
  ('expression -> INT','expression',1,'p_expression_int_float','Calculadora.py',162),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','Calculadora.py',163),
  ('empty -> <empty>','empty',0,'p_empty','Calculadora.py',169),
]
