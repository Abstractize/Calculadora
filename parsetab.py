
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEleftOPENCLOSECLOSE COS DIVIDE EQUALS EULER EXP FACTORIAL FLOAT INT LOG MINUS MULTIPLY NAME NATURAL OPEN PI PLUS SIN SQUARE TAN UP\n    calc : expression\n         | empty\n    \n    expression : expression EXP PLUS expression\n               | expression EXP MINUS expression\n    \n    expression : expression MULTIPLY expression\n               | expression DIVIDE expression \n               | expression PLUS expression\n               | expression MINUS expression \n               | expression EXP expression\n               | expression UP expression\n    \n    expression : OPEN expression CLOSE \n    \n    expression : expression FACTORIAL\n               \n    \n    expression : SIN OPEN expression CLOSE\n               | COS OPEN expression CLOSE\n               | TAN OPEN expression CLOSE\n               | NATURAL OPEN expression CLOSE\n               | SQUARE OPEN expression CLOSE\n               \n               \n    \n    expression : LOG expression OPEN expression CLOSE\n    \n     expression : INT\n                | FLOAT\n     \n    empty : \n    '
    
_lr_action_items = {'OPEN':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,42,43,44,45,46,47,48,50,],[4,4,21,22,23,24,25,4,-19,-20,4,4,4,4,4,4,-12,4,4,4,4,4,41,-9,4,4,-7,-8,-5,-6,-10,-11,4,-3,-4,-13,-14,-15,-16,-17,-18,]),'SIN':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'COS':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'TAN':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NATURAL':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'SQUARE':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOG':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'INT':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FLOAT':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'$end':([0,1,2,3,11,12,19,27,30,31,32,33,34,35,42,43,44,45,46,47,48,50,],[-21,0,-1,-2,-19,-20,-12,-9,-7,-8,-5,-6,-10,-11,-3,-4,-13,-14,-15,-16,-17,-18,]),'EXP':([2,11,12,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[13,-19,-20,-12,13,13,13,-7,-8,-5,-6,13,-11,13,13,13,13,13,-3,-4,-13,-14,-15,-16,-17,13,-18,]),'MULTIPLY':([2,11,12,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[16,-19,-20,-12,16,16,16,16,16,-5,-6,16,-11,16,16,16,16,16,16,16,-13,-14,-15,-16,-17,16,-18,]),'DIVIDE':([2,11,12,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[17,-19,-20,-12,17,17,17,17,17,-5,-6,17,-11,17,17,17,17,17,17,17,-13,-14,-15,-16,-17,17,-18,]),'PLUS':([2,11,12,13,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[14,-19,-20,28,-12,14,14,14,-7,-8,-5,-6,14,-11,14,14,14,14,14,-3,-4,-13,-14,-15,-16,-17,14,-18,]),'MINUS':([2,11,12,13,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[15,-19,-20,29,-12,15,15,15,-7,-8,-5,-6,15,-11,15,15,15,15,15,-3,-4,-13,-14,-15,-16,-17,15,-18,]),'UP':([2,11,12,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[18,-19,-20,-12,18,18,18,-7,-8,-5,-6,18,-11,18,18,18,18,18,-3,-4,-13,-14,-15,-16,-17,18,-18,]),'FACTORIAL':([2,11,12,19,20,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[19,-19,-20,-12,19,19,19,-7,-8,-5,-6,19,-11,19,19,19,19,19,-3,-4,-13,-14,-15,-16,-17,19,-18,]),'CLOSE':([11,12,19,20,27,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,],[-19,-20,-12,35,-9,-7,-8,-5,-6,-10,-11,44,45,46,47,48,-3,-4,-13,-14,-15,-16,-17,50,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,4,10,13,14,15,16,17,18,21,22,23,24,25,28,29,41,],[2,20,26,27,30,31,32,33,34,36,37,38,39,40,42,43,49,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','Calculadora2.py',135),
  ('calc -> empty','calc',1,'p_calc','Calculadora2.py',136),
  ('expression -> expression EXP PLUS expression','expression',4,'p_expression_exp','Calculadora2.py',144),
  ('expression -> expression EXP MINUS expression','expression',4,'p_expression_exp','Calculadora2.py',145),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',151),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',152),
  ('expression -> expression PLUS expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',153),
  ('expression -> expression MINUS expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',154),
  ('expression -> expression EXP expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',155),
  ('expression -> expression UP expression','expression',3,'p_expression_s_r_m_d','Calculadora2.py',156),
  ('expression -> OPEN expression CLOSE','expression',3,'p_expression_parentesis','Calculadora2.py',165),
  ('expression -> expression FACTORIAL','expression',2,'p_expression_fact_pi','Calculadora2.py',172),
  ('expression -> SIN OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',180),
  ('expression -> COS OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',181),
  ('expression -> TAN OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',182),
  ('expression -> NATURAL OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',183),
  ('expression -> SQUARE OPEN expression CLOSE','expression',4,'p_expression_trigonometria_log_exp_sqrt','Calculadora2.py',184),
  ('expression -> LOG expression OPEN expression CLOSE','expression',5,'p_expression_logarith','Calculadora2.py',192),
  ('expression -> INT','expression',1,'p_expression_int_float','Calculadora2.py',200),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','Calculadora2.py',201),
  ('empty -> <empty>','empty',0,'p_empty','Calculadora2.py',207),
]
